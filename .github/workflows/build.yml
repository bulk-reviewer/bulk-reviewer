---
name: "Build"
on:
  pull_request:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-18.04]
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install bulk_extractor and dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
              sudo add-apt-repository ppa:ubuntu-toolchain-r/test
              sudo apt-get update && sudo apt-get install -y \
                git \
                g++-7 \
                libgnome-keyring-dev \
                icnsutils \
                graphicsmagick \
                xz-utils \
                libewf-dev \
                libssl-dev \
                libsqlite3-dev \
                libboost-dev \
                libicu-dev \
                libtool \
                sleuthkit
              git clone --recursive https://github.com/tw4l/bulk_extractor && cd bulk_extractor && chmod 755 bootstrap.sh && ./bootstrap.sh && ./configure && make && sudo make install && cd ..
          elif [ "$RUNNER_OS" == "macOS" ]; then
              brew install libewf afflib sleuthkit bulk_extractor
          fi
        shell: bash
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/main/backend/requirements.txt
      - name: Build backend executable with pyinstaller
        run: |
          pyinstaller src/main/backend/br_processor.py --distpath src/main/backend_dist
      - name: Install node, npm and yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Build electron app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/prerelease'
        run: |
          yarn install
          yarn run build
      - name: Build and release electron app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/prerelease'
        run: |
          yarn install
          yarn run build --publish always
